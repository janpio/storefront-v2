// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
}

// Models for the KYC forms of type Individual, Entity and Beneficial
model Individual {
  id              Int      @id @default(autoincrement())
  firstName       String
  lastName        String
  dateOfBirth     DateTime
  ssnOrTaxId      String
  phone           String   @db.VarChar(15)
  email           String   @unique
  address1        String
  address2        String?
  zipCode         String   @db.VarChar(10)
  city            String
  state           String
  country         String
  docsAttachments String?
}

model Entity {
  id                    Int          @id @default(autoincrement())
  entityName            String
  entityType            String
  entityTaxId           String
  entityPhone           String       @db.VarChar(15)
  entityEmail           String       @unique
  entityAddress1        String
  entityAddress2        String?
  entityZipCode         String       @db.VarChar(10)
  entityCity            String
  entityState           String
  entityCountry         String
  entityDocsAttachments String?
  beneficials           Beneficial[]
}

model Beneficial {
  id                        Int     @id @default(autoincrement())
  entityId                  Int
  entity                    Entity  @relation(fields: [entityId], references: [id])
  beneficialName            String
  beneficialType            String
  beneficialTaxId           String
  beneficialPhone           String  @db.VarChar(15)
  beneficialEmail           String  @unique
  beneficialAddress1        String
  beneficialAddress2        String?
  beneficialZipCode         String  @db.VarChar(10)
  beneficialCity            String
  beneficialState           String
  beneficialCountry         String
  beneficialDocsAttachments String?
}
