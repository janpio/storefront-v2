// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

enum Role {
  GUEST = 'guest'
  OWNER = 'owner'
  OPERATOR = 'operator'
}

model User {
  id                  Int        @id @default(autoincrement())
  role                Role
  walletAddress       String
  firstName           String!
  lastName            String!
  email               String!    @unique
  phoneNumber         String!    @unique
  ssn                 String!    @unique
  dob                 String!
  streetAddress       String!
  streetAddress2      String!
  city                String!
  state               String!
  postalCode          String!
  country             String!
  merchantId          String!
  walletId            String!
  kycStatus           KycStatus  @default(NONE)
  lastSignedAt        DateTime!
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
}

model Merchant {
  id                  Int        @id @default(autoincrement())
  name                String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

enum OrderStatus {
  PROCESSING = 'processing',
  PENDING = 'pending',
  PAID = 'paid',
  ERROR = 'error',
}

enum ChargeStatus {
  AUTHORIZED = 'Authorized'
  DECLINED = 'Declined'
}

model Order {
  id                  Int       @id @default(autoincrement())
  chainId             String
  currency            String
  walletAddress       String
  amount              Float
  tipAmount           Float default(0)
  serviceFee          Float default(0)
  networkFee          Float default(0)
  taxAmount           Float default(0)
  unitAmount          Float default(0)
  chargeAmount        Float default(0)
  txHash              String!
  last4               String!
  chargeStatus        ChargeStatus!
  status              OrderStatus @default(OrderStatus.PENDING)
  error               JSON!
  merchantId          Int
  userId              Int
  customerId          Int!
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Customer {
  id                  Int       @id @default(autoincrement())
  externalId          String    // unique pylon id
  firstName           String
  lastName            String
  email               String!   @unique
  phoneNumber         String!   @unique
  ssn                 String!    @unique
  dob                 String!
  streetAddress       String
  streetAddress2      String!
  city                String
  state               String
  postalCode          String
  country             String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}
